---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: matrix-synapse
  namespace: matrix-synapse
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 14.5.3
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: matrixdotorg/synapse
      tag: latest
      pullPolicy: IfNotPresent
    
    # Define app-specific values under a dedicated key
    matrix_synapse:
      SYNAPSE_SERVER_NAME: ${DOMAIN_0}
      SYNAPSE_REPORT_STATS: "no"
      POSTGRES_HOST: matrix-synapse-cnpg-main
      POSTGRES_USER: matrix
      POSTGRES_PASSWORD: ${MATRIX_DB_PASSWORD}

    # Add credentials block for VolSync backup
    credentials:
      ${VOLSYNC_BACKUP_MAIN_NAME}: # Flux variable for secret name
        accessKey: ${VOLSYNC_BACKUP_MAIN_ACCESSKEY}
        bucket: ${VOLSYNC_BACKUP_MAIN_BUCKET}
        encrKey: ${VOLSYNC_BACKUP_MAIN_ENCRKEY}
        name: ${VOLSYNC_BACKUP_MAIN_NAME} # Used as the key and potential secret name part
        path: "" # Optional sub-path within the bucket
        secretKey: ${VOLSYNC_BACKUP_MAIN_SECRETKEY}
        type: s3 # Assuming S3 type like hoarder
        url: ${VOLSYNC_BACKUP_MAIN_URL}

    podSecurityContext:
      runAsUser: 991 # Ensure user is 991
      runAsGroup: 991 # Ensure group is 991
      fsGroup: 991 # Ensure filesystem group is 991
    
    service:
      main:
        ports:
          main:
            port: 8008
            protocol: http
            targetPort: 8008
    
    # Add ingress configuration similar to hoarder
    ingress:
      main:
        enabled: true
        ingressClassName: external
        hosts:
          - host: matrix.${DOMAIN_0} # Use a dedicated subdomain for Synapse
            paths:
              - path: /
        integrations:
          certManager:
            certificateIssuer: domain-0-le-prod # Use the same issuer as hoarder
            enabled: true
          homepage:
            enabled: false # Assuming no homepage integration needed
          traefik:
            allowCors: true # Often needed for web clients
            enabled: true
            entrypoints:
              - websecure # Use HTTPS entrypoint

    persistence:
      data:
        enabled: true
        type: pvc
        size: 10Gi
        targetSelector:
          main:
            main:
              mountPath: /data
        volsync:
          - name: ${VOLSYNC_BACKUP_MAIN_NAME} # Use Flux variable
            type: restic
            credentials: ${VOLSYNC_BACKUP_MAIN_NAME} # Use Flux variable
            src:
              enabled: true
            dest:
              enabled: true
    
    cnpg:
      main:
        mode: recovery
        backups:
          enabled: true
          credentials: ${VOLSYNC_BACKUP_MAIN_NAME}
        recovery:
          credentials: ${VOLSYNC_BACKUP_MAIN_NAME}
        user: matrix
        database: matrix
        password: ${MATRIX_DB_PASSWORD}
    
    workload:
      main:
        podSpec:
          containers:
            main:
              primary: true
              env:
                SYNAPSE_SERVER_NAME: "{{ .Values.matrix_synapse.SYNAPSE_SERVER_NAME }}"
                SYNAPSE_REPORT_STATS: "{{ .Values.matrix_synapse.SYNAPSE_REPORT_STATS }}"
                POSTGRES_HOST: "{{ .Values.matrix_synapse.POSTGRES_HOST }}"
                POSTGRES_USER: "{{ .Values.matrix_synapse.POSTGRES_USER }}"
                POSTGRES_PASSWORD: "{{ .Values.matrix_synapse.POSTGRES_PASSWORD }}"
              volumeMounts:
                - name: data # Mount the main PVC
                  mountPath: /data
              ports:
                - containerPort: 8008
                  name: main
              # Configure probes (switching back to TCP for diagnostics)
              probes:
                liveness:
                  enabled: true
                  # spec: # Use default spec from app-template, usually fine
                  port: 8008
                  type: tcp # Changed from http
                  # path: /health # Removed path
                readiness:
                  enabled: true
                  # spec: # Use default spec
                  port: 8008
                  type: tcp # Changed from http
                  # path: /health # Removed path
                startup:
                  enabled: true
                  # spec: # Use default spec
                  port: 8008
                  type: tcp # Changed from http
                  # path: /health # Removed path
