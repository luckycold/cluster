apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: gitlab
    namespace: gitlab
spec:
    interval: 15m
    chart:
        spec:
            chart: app-template
            version: 15.24.0
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: gitlab
    values:
        TZ: US/Central
        release_name: gitlab

        image:
            repository: gitlab/gitlab-ce
            pullPolicy: IfNotPresent
            tag: "18.5.0-ce.0"

        securityContext:
            container:
                readOnlyRootFilesystem: false
                runAsNonRoot: false
                runAsUser: 0
                runAsGroup: 0
                PUID: 0
                PGID: 0
            pod:
                fsGroup: 0
                supplementalGroups: []

        credentials:
            ${VOLSYNC_BACKUP_MAIN_NAME}:
                accessKey: ${VOLSYNC_BACKUP_MAIN_ACCESSKEY}
                bucket: ${VOLSYNC_BACKUP_MAIN_BUCKET}
                encrKey: ${VOLSYNC_BACKUP_MAIN_ENCRKEY}
                name: ${VOLSYNC_BACKUP_MAIN_NAME}
                path: ""
                secretKey: ${VOLSYNC_BACKUP_MAIN_SECRETKEY}
                type: s3
                url: ${VOLSYNC_BACKUP_MAIN_URL}

        service:
            main:
                enabled: true
                ports:
                    main:
                        port: 80
                        targetPort: 80
            ssh:
                enabled: true
                type: LoadBalancer
                externalTrafficPolicy: Local
                ports:
                    ssh:
                        enabled: true
                        port: 22
                        targetPort: 22

        ingress:
            main:
                enabled: true
                ingressClassName: external
                hosts:
                    - host: git.${DOMAIN_0}
                      paths:
                          - path: /
                integrations:
                    certManager:
                        certificateIssuer: domain-0-le-prod
                        enabled: true
                    homepage:
                        enabled: false

        workload:
            main:
                podAnnotations:
                    reloader.stakater.com/auto: "true"
                    reloader.stakater.com/rollout-strategy: "restart"
                podSpec:
                    initContainers:
                        - name: fix-ssh-hostkey-perms
                          image: busybox:1.37
                          imagePullPolicy: IfNotPresent
                          command:
                              - sh
                              - -c
                              - |
                                  if ls /etc/gitlab/ssh_host_* >/dev/null 2>&1; then
                                      chmod 600 /etc/gitlab/ssh_host_* || exit 1
                                  fi
                          volumeMounts:
                              - mountPath: /etc/gitlab
                                name: config
                    containers:
                        main:
                            primary: true
                            command:
                                - /bin/sh
                                - -c
                            args:
                                - |
                                    fix_keys() {
                                        if ls /etc/gitlab/ssh_host_* >/dev/null 2>&1; then
                                            chmod 600 /etc/gitlab/ssh_host_* || return 1
                                        fi
                                    }
                                    fix_keys || true
                                    (
                                        sleep 120
                                        fix_keys && gitlab-ctl restart sshd >/dev/null 2>&1 || true
                                    ) &
                                    exec /assets/wrapper
                            ports:
                                - containerPort: 80
                                  name: http
                                - containerPort: 22
                                  name: ssh
                            env:
                                GITLAB_ROOT_PASSWORD:
                                    secretKeyRef:
                                        expandObjectName: false
                                        key: GITLAB_ROOT_PASSWORD
                                        name: gitlab-secrets
                                        optional: false
                                AUTHELIA_CLIENT_SECRET:
                                    secretKeyRef:
                                        expandObjectName: false
                                        key: clients_gitlab_client_secret
                                        name: gitlab-secrets
                                        optional: true
                                GITLAB_OMNIBUS_CONFIG: |
                                    external_url 'https://git.${DOMAIN_0}'
                                    nginx['listen_port'] = 80
                                    nginx['listen_https'] = false
                                    gitlab_rails['initial_root_password'] = ENV['GITLAB_ROOT_PASSWORD']
                                    gitlab_rails['gitlab_shell_ssh_port'] = 22
                                    if ENV['AUTHELIA_CLIENT_SECRET']
                                        gitlab_rails['omniauth_enabled'] = true
                                        gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
                                        gitlab_rails['omniauth_block_auto_created_users'] = false
                                        gitlab_rails['omniauth_allow_basic_auth'] = true
                                        gitlab_rails['omniauth_providers'] = [
                                            {
                                                name: 'openid_connect',
                                                label: 'Authelia',
                                                args: {
                                                    name: 'openid_connect',
                                                    scope: ['openid', 'profile', 'email'],
                                                    response_type: 'code',
                                                    issuer: 'https://auth.${DOMAIN_0}',
                                                    discovery: true,
                                                    uid_field: 'preferred_username',
                                                    client_auth_method: 'basic',
                                                    client_options: {
                                                        identifier: 'gitlab',
                                                        secret: ENV['AUTHELIA_CLIENT_SECRET'],
                                                        redirect_uri: 'https://git.${DOMAIN_0}/users/auth/openid_connect/callback'
                                                    }
                                                }
                                            }
                                        ]
                                    end
                                    %w[rsa ecdsa ed25519].each do |key_type|
                                        file "/etc/gitlab/ssh_host_#{key_type}_key" do
                                            mode '0600'
                                            sensitive true
                                            only_if { ::File.exist?("/etc/gitlab/ssh_host_#{key_type}_key") }
                                        end
                                    end
                            resources:
                                limits:
                                    cpu: 4000m
                                    memory: 12Gi
                                requests:
                                    cpu: 500m
                                    memory: 4Gi
                            probes:
                                liveness:
                                    enabled: true
                                    type: tcp
                                    port: 80
                                readiness:
                                    enabled: true
                                    type: tcp
                                    port: 80
                                startup:
                                    enabled: true
                                    type: tcp
                                    port: 80
                    dnsPolicy: ClusterFirst
                    restartPolicy: Always
                replicas: 1

        persistence:
            config:
                enabled: true
                targetSelector:
                    main:
                        main:
                            mountPath: "/etc/gitlab"
                volsync:
                    - credentials: ${VOLSYNC_BACKUP_MAIN_NAME}
                      dest:
                          enabled: true
                      name: ${VOLSYNC_BACKUP_MAIN_NAME}
                      src:
                          enabled: true
                      type: restic
            data:
                enabled: true
                targetSelector:
                    main:
                        main:
                            mountPath: "/var/opt/gitlab"
                volsync:
                    - credentials: ${VOLSYNC_BACKUP_MAIN_NAME}
                      dest:
                          enabled: true
                      name: ${VOLSYNC_BACKUP_MAIN_NAME}
                      src:
                          enabled: true
                      type: restic
